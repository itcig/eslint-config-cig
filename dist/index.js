'use strict';
module.exports = {
    settings: {
        'import/resolver': {
            node: {
                extensions: ['.mjs', '.ts', '.d.ts', '.tsx', '.js', '.jsx', '.md', '.mdx', '.json'],
            },
        },
    },
    extends: ['airbnb', 'plugin:mocha/recommended', 'prettier'],
    env: {
        browser: true,
    },
    plugins: ['markdown', 'react-hooks', 'mocha', 'node', 'promise', 'unicorn', 'prettier'],
    parser: 'babel-eslint',
    rules: {
        'mocha/no-mocha-arrows': 'off',
        'react-hooks/rules-of-hooks': 'error',
        'react/jsx-filename-extension': [
            'error',
            {
                extensions: ['.mjs', '.ts', '.tsx', '.js', '.jsx', '.json'],
            },
        ],
        'unicorn/catch-error-name': ['error', { name: 'err' }],
        'unicorn/explicit-length-check': 'off',
        'unicorn/filename-case': 'off',
        'unicorn/no-abusive-eslint-disable': 'error',
        'unicorn/no-process-exit': 'error',
        'unicorn/throw-new-error': 'error',
        'unicorn/number-literal-case': 'error',
        'unicorn/escape-case': 'error',
        'unicorn/no-array-instanceof': 'error',
        'unicorn/no-new-buffer': 'error',
        'unicorn/no-hex-escape': 'error',
        'unicorn/custom-error-definition': 'error',
        'unicorn/prefer-starts-ends-with': 'error',
        'unicorn/prefer-type-error': 'error',
        'unicorn/no-fn-reference-in-iterator': 'off',
        'unicorn/import-index': 'off',
        'unicorn/new-for-builtins': 'error',
        'unicorn/regex-shorthand': 'error',
        'unicorn/prefer-spread': 'off',
        'unicorn/error-message': 'error',
        'unicorn/no-unsafe-regex': 'error',
        'unicorn/prefer-add-event-listener': 'error',
        'promise/catch-or-return': 'off',
        'promise/no-return-wrap': 'error',
        'promise/param-names': 'error',
        'promise/always-return': 'off',
        'promise/no-native': 'off',
        'promise/no-nesting': 'off',
        'promise/no-promise-in-callback': 'off',
        'promise/no-callback-in-promise': 'off',
        'promise/avoid-new': 'off',
        'promise/no-new-statics': 'error',
        'promise/no-return-in-finally': 'error',
        'promise/valid-params': 'error',
        'promise/prefer-await-to-then': 'off',
        'promise/prefer-await-to-callbacks': 'off',
        'node/process-exit-as-throw': 'error',
        'node/no-unpublished-import': 'off',
        'node/no-unpublished-bin': 'error',
        'node/no-deprecated-api': 'error',
        'prettier/prettier': ['error'],
        strict: 'off',
        'import/no-dynamic-require': 'off',
        'func-names': ['error', 'always'],
        'arrow-parens': ['error', 'always', { requireForBlockBody: true }],
        'prefer-arrow-callback': ['error', { allowNamedFunctions: true, allowUnboundThis: true }],
        'max-params': ['error', { max: 5 }],
        'max-statements': ['error', { max: 25 }],
        'max-statements-per-line': ['error', { max: 1 }],
        'max-nested-callbacks': ['error', { max: 5 }],
        'max-depth': ['error', { max: 5 }],
        'arrow-body-style': [
            'error',
            'as-needed',
            {
                requireReturnForObjectLiteral: false,
            },
        ],
        'no-use-before-define': [
            'error',
            {
                functions: false,
                classes: true,
                variables: true,
            },
        ],
        'no-param-reassign': [
            'error',
            {
                props: true,
                ignorePropertyModificationsFor: [
                    'opts',
                    'options',
                    'x',
                    'acc',
                    'e',
                    'err',
                    'ctx',
                    'req',
                    'request',
                    'res',
                    'response',
                    '$scope',
                ],
            },
        ],
        'no-undef': 'off',
        'import/no-extraneous-dependencies': 'off',
    },
};
//# sourceMappingURL=index.js.map